FROM node:14.18-alpine AS build (сборка фронта на ангуляре)
WORKDIR /usr/src/app
COPY . .
RUN npm install
RUN npm run build

FROM nginx:1.17.1-alpine
COPY nginx.conf /etc/nginx/nginx.conf
COPY --from=build /usr/src/app/dist/my-new-app /usr/share/nginx/html
CMD ["nginx", "-g", "daemon off;"]
---------------------------------------------------------------------------------------------------
FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build (сборка .NET приложения без фронта с дополнительными csproj файлами с других .NET приложений)
WORKDIR /src

COPY ["src/Pig.Identity.Web.Api/Pig.Identity.Web.Api.csproj", "Services/Identity/Pig.Identity.Web.Api/"]
COPY ["src/Pig.Identity.Infrastructure/Pig.Identity.Infrastructure.csproj", "Services/Identity/Pig.Identity.Infrastructure/"]
COPY ["src/Pig.Identity.Domain/Pig.Identity.Domain.csproj", "Services/Identity/Pig.Identity.Domain/"]
COPY ["src/Pig.Identity.Application/Pig.Identity.Application.csproj", "Services/Identity/Pig.Identity.Application/"]

RUN dotnet nuget add source "https://dns-name/api/v4/projects/id-project/packages/nuget/index.json" --username user --password $TOKEN_REGISTRY_BOX --store-password-in-clear-text
RUN dotnet restore "Services/Identity/Pig.Identity.Web.Api/Pig.Identity.Web.Api.csproj"

COPY . .

WORKDIR "/src/Services/Identity/Pig.Identity.Web.Api"
RUN dotnet build "Pig.Identity.Web.Api.csproj" -c Release -o /app/build
RUN dotnet publish "Pig.Identity.Web.Api.csproj" -c Release -o /app/publish

FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS final
WORKDIR /app
EXPOSE 80
COPY --from=build /app/publish .
ENTRYPOINT ["dotnet", "Pig.Identity.Web.Api.dll"]
