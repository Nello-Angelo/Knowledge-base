apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-conf
data:
  kibana.yml: |
    pid.file: /opt/bitnami/kibana/tmp/kibana.pid
    server.host: "::"
    server.port: 5601
    elasticsearch.hosts: [http://192.168.250.104:9200]
    server.rewriteBasePath: false
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: kibana
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
  storageClassName: managed-nfs-storage
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5601
      targetPort: http
      nodePort: null
  selector:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: kibana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: kibana
      app.kubernetes.io/instance: kibana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kibana
        app.kubernetes.io/instance: kibana
    spec:     
      containers:
        - name: kibana
          image: docker.io/bitnami/kibana:7.15.1-debian-10-r5
          imagePullPolicy: IfNotPresent
          env:
            - name: KIBANA_PORT_NUMBER
              value: "5601"
            - name: KIBANA_ELASTICSEARCH_URL
              value: "http://192.168.250.104:9200"
            - name: KIBANA_ELASTICSEARCH_PORT_NUMBER
              value: "9200"
            - name: KIBANA_FORCE_INITSCRIPTS
              value: "false"
            - name: KIBANA_SERVER_ENABLE_TLS
              value: "false"
            - name: KIBANA_ELASTICSEARCH_ENABLE_TLS
              value: "false"
            - name: KIBANA_ELASTICSEARCH_TLS_USE_PEM
              value: "false"
            - name: KIBANA_ELASTICSEARCH_TLS_VERIFICATION_MODE
              value: "full"
          ports:
            - name: http
              containerPort: 5601
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: kibana-data
              mountPath: /bitnami/kibana
            - name: kibana-config
              mountPath: /bitnami/kibana/conf
      volumes:
        - name: kibana-data
          persistentVolumeClaim:
            claimName: kibana
        - name: kibana-config
          configMap:
            name: kibana-conf